/**
 * @author: zimyuan
 * @last-edit-date:2016-10-04
 */

/**
 * Map json to string with given spilters.
 * 
 * @param {Funtcion} map
 * @param {String} spliter1: spliter in key and value
 * @param {String} spliter2: spliter in different key and value
 * @return {String}
 */
export function mapToStr(map, spliter1 = '&', spliter2 = '=') {
    try {
        let arr = [];

        for ( let p in map )
            arr.push(p + spliter2 + map[p]);

        return arr.join(spliter1);

    } catch (e) {
        alert(e.message);
    }
}

/**
 * Genarate uuid
 * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
 *
 * @param {String} prefix
 * @return {String}
 */
export function uuid(prefix = '') {
    return prefix + 'xxxx4xxxyxxxx'.replace(/[xy]/g, function(c) {
        let r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
        return v.toString(16);
    });
}

/**
 * meaningless function
 * @return {undefined}
 */
function noop() {}

/**
 * Remove the `script` tag, `callback function` and `timer` generated by `jsonp` function.
 *
 * @param {String} id: callback function name
 * @param {HTMLScriptElement} script
 * @param {Number} timer id generated by setTimeout function
 */
function cleanup(id, script, timer) {
    if ( script.parentNode )
        script.parentNode.removeChild(script);

    window[id] = noop;

    if ( timer )
        clearTimeout(timer);
}

/**
 * Send request in type of `jsonp`
 * 
 * @param {String} url
 * @param {Object} opts
 * @param {Function} noop
 * @return {Function}
 */
export function jsonp(url, params = {}, func = noop, opts = {
        prefix    : '__jsonp__',
        paramName : 'fun',
        timeout   : 6000,
        className : '__jsonp__'
    }) {

    let cbkName = uuid( opts.prefix );
    let target = document.head || document.getElementsByTagName('script')[0];
            
    let script;
    let timer;

    if ( opts.timeout ) {
        timer = setTimeout( () => {
            cleanup(cbkName, script, timer);
        }, opts.timeout);
    }

    window[cbkName] = function(data) {
        if ( func )
            func(data);

        cleanup(cbkName, script, timer);
    }

    let spliter = ( url.indexOf('?') > -1
                   ? '&'
                   : '?' );

    url = `${url}${spliter}${mapToStr(params)}&${opts.paramName}=${encodeURIComponent(cbkName)}`;
    url = url.replace('?&', '?');

    script           = document.createElement('script');
    script.src       = url;
    script.className = opts.className;
    target.parentNode.insertBefore(script, target);


    return function() {
        if ( window[cbkName] )
            cleanup(cbkName, script, timer);
    }
}
